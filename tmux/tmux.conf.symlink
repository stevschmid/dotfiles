# Scroll History
set -g history-limit 30000

# Set ability to capture on start and restore on exit window data when running an application
setw -g alternate-screen on

# No escape time for vi mode
set -sg escape-time 0

# No mouserino! Keep it efficient bra!
set-option -g -q mouse off

# Enable VIM mode
setw -g mode-keys vi
set -g status-keys vi

# panes
set -g pane-border-fg brightblack
set -g pane-active-border-fg blue

# status on top
#set -g status-position top

# status line
set -g status-justify left
set -g status-bg black
set -g status-fg white
set -g status-interval 4

# messaging
set -g message-fg black
set -g message-bg yellow
set -g message-command-fg blue
set -g message-command-bg black

#window mode
setw -g mode-bg colour6
setw -g mode-fg colour0

# window status
setw -g window-status-format "#[fg=colour8]#[bg=white] #I #[bg=colour8]#[fg=white] #W#F"
setw -g window-status-current-format "#[fg=black]#[bg=colour7] #I #[fg=black]#[bg=colour15] #W#F"
setw -g window-status-current-bg black
setw -g window-status-current-attr bold

# Info on right
set -g status-right "#(/usr/bin/battery -t) #[fg=magenta]#(sysctl -n vm.loadavg | cut -d \" \" -f 2-4) #[fg=white]| #[fg=yellow]Tmux:#S #[fg=white]| #[fg=green]%Y-%m-%d #[fg=white]| #[fg=cyan]%A %H:%M"
set -g status-right-length 80

# Info on left (no session display)
set -g status-left ''

# Smart pane switching with awareness of vim splits
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
# bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
# bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
# bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
# not_tmux='`echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"` || `echo "#T" | grep -iqE "(^|\/)fzf$"`'

# Make it FZF compatible (https://github.com/junegunn/fzf/pull/582#issuecomment-230929094)
not_tmux='`echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"` || `echo "#{pane_start_command}" | grep -iqE "fzf"` || `echo "#{pane_current_command}" | grep -iqE "fzf"`'
bind -n C-h if-shell "$not_tmux" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$not_tmux" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$not_tmux" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$not_tmux" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$not_tmux" "send-keys C-\\" "select-pane -l"

# Move between windows
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Enable resizing with HJKL
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# http://robots.thoughtbot.com/how-to-copy-and-paste-with-tmux-on-mac-os-x
set-option -g default-command "reattach-to-user-namespace -l zsh"

# bring vim back
bind -n C-z run "tmux send-keys C-z"

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1

# Clear screen
bind C-k send-keys 'C-l'

# Better splits in current dir
bind - split-window -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Use swaggier prefix (make sure to remap caps lock to Ctrl for more efficiency)
set -g prefix 'C-a'

# Reload tmux conf
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Use more vimesque copy'n'pasterino
# Setup 'v' to begin selection as in Vim
bind [ copy-mode
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# This allows you to press page up in normal mode and have it scroll back into the history. If you page down back to the bottom of the history, it automatically exits copy mode.
bind-key -T root PPage if-shell -F "#{alternate_on}" "send-keys PPage" "copy-mode -e; send-keys PPage"
bind-key -t vi-copy PPage page-up
bind-key -t vi-copy NPage page-down

# These options allow you do have different styles for active and non-active panes.
set-window-option -g window-style 'bg=#181818'
set-window-option -g window-active-style 'bg=black'
