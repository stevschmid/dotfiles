zmodload zsh/zprof

source ~/.zprezto/init.zsh

# uname -a
export DOTFILES=$HOME/.dotfiles

# DOTFILES STUFF
# use .localrc for SUPER SECRET CRAP that you don't
# want in your public, versioned repo.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

# typeset -U config_files
config_files=($DOTFILES/**/*.zsh)

# load the path files
for file in ${config_files}
do
  source $file
done

# I know what I'm doing
alias cp='nocorrect cp'
alias ln='nocorrect ln'
alias mv='nocorrect mv'
alias rm='nocorrect rm'

# load tmux
# alias devenv='pushd ~/projects && tmux attach && popd'

# F Z F
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# yarn
export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

# apple silicon homebrew support
# https://soffes.blog/homebrew-on-apple-silicon
export PATH="/opt/homebrew/bin:/usr/local/bin:$PATH"
alias ibrew='arch -x86_64 /usr/local/bin/brew'

# auto-start tmux
if [ "$TMUX" = "" ]; then tmux attach; fi

# tabtab source for serverless package
# uninstall by removing these lines or running `tabtab uninstall serverless`
[[ -f /Users/spidy/projects/hakuna/reg-suit/node_modules/tabtab/.completions/serverless.zsh ]] && . /Users/spidy/projects/hakuna/reg-suit/node_modules/tabtab/.completions/serverless.zsh
# tabtab source for sls package
# uninstall by removing these lines or running `tabtab uninstall sls`

# rbenv
eval "$(rbenv init -)"

# rbenv 
# DO NOT USE $(brew --prefix openssl@1.1) HERE!
# slows down zsh startup time immensely
export RUBY_CONFIGURE_OPTS="--with-openssl-dir=/opt/homebrew/opt/openssl@1.1"
# export GEM_HOME="$HOME/.gem"

export HOMEBREW_NO_ANALYTICS=1
export HOMEBREW_NO_AUTO_UPDATE=1

# nvm
# CAREFUL: loading nvm non-lazy results in slow shell initialization
lazynvm() {
  unset -f nvm node npm
  export NVM_DIR="$HOME/.nvm"
    [ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"  # This loads nvm
    [ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion
}

nvm() {
  lazynvm 
  nvm $@
}

node() {
  lazynvm
  node $@
}

npm() {
  lazynvm
  npm $@
}
